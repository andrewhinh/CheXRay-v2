from fastai.vision.all import *

#Metrics
def single(pred, targ, metric, idx=None, thresh=None, beta=None, weights=None):
    if weights:
        all_inp=0
        for weight in range(len(weights)): all_inp += pred[weight] * weights[weight]
        pred = all_inp/len(weights)
    else:
        if idx is not None: pred = pred[idx]
        else: pred = pred[-1]

    if metric=='ap': return APScoreMulti(average='weighted')(pred, targ)
    elif metric=='roc': return RocAucMulti(average='weighted')(pred, targ)
    elif metric=="acc": return accuracy_multi(pred, targ, thresh)
    else:
        pred = pred.sigmoid()
        pred[pred>=thresh]=1
        pred[pred<thresh]=0
        if metric=='prec': return PrecisionMulti(thresh=thresh, average='weighted')(pred, targ)
        elif metric=='rec': return RecallMulti(thresh=thresh, average='weighted')(pred, targ)
        elif metric=='fbeta': return FBetaMulti(beta=beta, thresh=thresh, average='weighted')(pred, targ)

def ap_ap(pred, targ): return single(pred, targ, "ap", 0)
def ap_ap_ax(pred, targ): return single(pred, targ, "ap", 1)
def ap_ap_lld(pred, targ): return single(pred, targ, "ap", 2)
def ap_ap_rld(pred, targ): return single(pred, targ, "ap", 3)
def ap_pa(pred, targ): return single(pred, targ, "ap", 4)
def ap_pa_lld(pred, targ): return single(pred, targ, "ap", 5)
def ap_pa_rld(pred, targ): return single(pred, targ, "ap", 6)
def ap_lat(pred, targ): return single(pred, targ, "ap", 7)
def ap_ll(pred, targ): return single(pred, targ, "ap", 8)
def ap_lao(pred, targ): return single(pred, targ, "ap", 9)
def ap_rao(pred, targ): return single(pred, targ, "ap", 10)
def ap_swim(pred, targ): return single(pred, targ, "ap", 11)
def ap_xtab(pred, targ): return single(pred, targ, "ap", 12)
def ap_lpo(pred, targ): return single(pred, targ, "ap", 13)
def ap_txtcls(pred, targ): return single(pred, targ, "ap", 14)
def ap_tab(pred, targ): return single(pred, targ, "ap", 15)
def ap_multi(pred, targ): return single(pred, targ, "ap")
def ap_weighted(pred, targ, weights): return single(pred, targ, "ap", None, None, None, weights)

def roc_ap(pred, targ): return single(pred, targ, "roc", 0)
def roc_ap_ax(pred, targ): return single(pred, targ, "roc", 1)
def roc_ap_lld(pred, targ): return single(pred, targ, "roc", 2)
def roc_ap_rld(pred, targ): return single(pred, targ, "roc", 3)
def roc_pa(pred, targ): return single(pred, targ, "roc", 4)
def roc_pa_lld(pred, targ): return single(pred, targ, "roc", 5)
def roc_pa_rld(pred, targ): return single(pred, targ, "roc", 6)
def roc_lat(pred, targ): return single(pred, targ, "roc", 7)
def roc_ll(pred, targ): return single(pred, targ, "roc", 8)
def roc_lao(pred, targ): return single(pred, targ, "roc", 9)
def roc_rao(pred, targ): return single(pred, targ, "roc", 10)
def roc_swim(pred, targ): return single(pred, targ, "roc", 11)
def roc_xtab(pred, targ): return single(pred, targ, "roc", 12)
def roc_lpo(pred, targ): return single(pred, targ, "roc", 13)
def roc_txtcls(pred, targ): return single(pred, targ, "roc", 14)
def roc_tab(pred, targ): return single(pred, targ, "roc", 15)
def roc_multi(pred, targ): return single(pred, targ, "roc")
def roc_weighted(pred, targ, weights): return single(pred, targ, "roc", None, None, None, weights)
    
thresh=0.5
def acc_ap(pred, targ, thresh=thresh): return single(pred, targ, "acc", 0, thresh)
def acc_ap_ax(pred, targ, thresh=thresh): return single(pred, targ, "acc", 1, thresh)
def acc_ap_lld(pred, targ, thresh=thresh): return single(pred, targ, "acc", 2, thresh)
def acc_ap_rld(pred, targ, thresh=thresh): return single(pred, targ, "acc", 3, thresh)
def acc_pa(pred, targ, thresh=thresh): return single(pred, targ, "acc", 4, thresh)
def acc_pa_lld(pred, targ, thresh=thresh): return single(pred, targ, "acc", 5, thresh)
def acc_pa_rld(pred, targ, thresh=thresh): return single(pred, targ, "acc", 6, thresh)
def acc_lat(pred, targ, thresh=thresh): return single(pred, targ, "acc", 7, thresh)
def acc_ll(pred, targ, thresh=thresh): return single(pred, targ, "acc", 8, thresh)
def acc_lao(pred, targ, thresh=thresh): return single(pred, targ, "acc", 9, thresh)
def acc_rao(pred, targ, thresh=thresh): return single(pred, targ, "acc", 10, thresh)
def acc_swim(pred, targ, thresh=thresh): return single(pred, targ, "acc", 11, thresh)
def acc_xtab(pred, targ, thresh=thresh): return single(pred, targ, "acc", 12, thresh)
def acc_lpo(pred, targ, thresh=thresh): return single(pred, targ, "acc", 13, thresh)
def acc_txtcls(pred, targ, thresh=thresh): return single(pred, targ, "acc", 14, thresh)
def acc_tab(pred, targ, thresh=thresh): return single(pred, targ, "acc", 15, thresh)
def acc_multi(pred, targ, thresh=thresh): return single(pred, targ, "acc", None, thresh)
def acc_weighted(pred, targ, weights, thresh=thresh): return single(pred, targ, "acc", None, thresh, None, weights)

def prec_ap(pred, targ, thresh=thresh): return single(pred, targ, "prec", 0, thresh)
def prec_ap_ax(pred, targ, thresh=thresh): return single(pred, targ, "prec", 1, thresh)
def prec_ap_lld(pred, targ, thresh=thresh): return single(pred, targ, "prec", 2, thresh)
def prec_ap_rld(pred, targ, thresh=thresh): return single(pred, targ, "prec", 3, thresh)
def prec_pa(pred, targ, thresh=thresh): return single(pred, targ, "prec", 4, thresh)
def prec_pa_lld(pred, targ, thresh=thresh): return single(pred, targ, "prec", 5, thresh)
def prec_pa_rld(pred, targ, thresh=thresh): return single(pred, targ, "prec", 6, thresh)
def prec_lat(pred, targ, thresh=thresh): return single(pred, targ, "prec", 7, thresh)
def prec_ll(pred, targ, thresh=thresh): return single(pred, targ, "prec", 8, thresh)
def prec_lao(pred, targ, thresh=thresh): return single(pred, targ, "prec", 9, thresh)
def prec_rao(pred, targ, thresh=thresh): return single(pred, targ, "prec", 10, thresh)
def prec_swim(pred, targ, thresh=thresh): return single(pred, targ, "prec", 11, thresh)
def prec_xtab(pred, targ, thresh=thresh): return single(pred, targ, "prec", 12, thresh)
def prec_lpo(pred, targ, thresh=thresh): return single(pred, targ, "prec", 13, thresh)
def prec_txtcls(pred, targ, thresh=thresh): return single(pred, targ, "prec", 14, thresh)
def prec_tab(pred, targ, thresh=thresh): return single(pred, targ, "prec", 15, thresh)
def prec_multi(pred, targ, thresh=thresh): return single(pred, targ, "prec", None, thresh)
def prec_weighted(pred, targ, weights, thresh=thresh): return single(pred, targ, "prec", None, thresh, None, weights)

def rec_ap(pred, targ, thresh=thresh): return single(pred, targ, "rec", 0, thresh)
def rec_ap_ax(pred, targ, thresh=thresh): return single(pred, targ, "rec", 1, thresh)
def rec_ap_lld(pred, targ, thresh=thresh): return single(pred, targ, "rec", 2, thresh)
def rec_ap_rld(pred, targ, thresh=thresh): return single(pred, targ, "rec", 3, thresh)
def rec_pa(pred, targ, thresh=thresh): return single(pred, targ, "rec", 4, thresh)
def rec_pa_lld(pred, targ, thresh=thresh): return single(pred, targ, "rec", 5, thresh)
def rec_pa_rld(pred, targ, thresh=thresh): return single(pred, targ, "rec", 6, thresh)
def rec_lat(pred, targ, thresh=thresh): return single(pred, targ, "rec", 7, thresh)
def rec_ll(pred, targ, thresh=thresh): return single(pred, targ, "rec", 8, thresh)
def rec_lao(pred, targ, thresh=thresh): return single(pred, targ, "rec", 9, thresh)
def rec_rao(pred, targ, thresh=thresh): return single(pred, targ, "rec", 10, thresh)
def rec_swim(pred, targ, thresh=thresh): return single(pred, targ, "rec", 11, thresh)
def rec_xtab(pred, targ, thresh=thresh): return single(pred, targ, "rec", 12, thresh)
def rec_lpo(pred, targ, thresh=thresh): return single(pred, targ, "rec", 13, thresh)
def rec_txtcls(pred, targ, thresh=thresh): return single(pred, targ, "rec", 14, thresh)
def rec_tab(pred, targ, thresh=thresh): return single(pred, targ, "rec", 15, thresh)
def rec_multi(pred, targ, thresh=thresh): return single(pred, targ, "rec", None, thresh)
def rec_weighted(pred, targ, weights, thresh=thresh): return single(pred, targ, "rec", None, thresh, None, weights)

beta=1
def fbeta_ap(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 0, thresh, beta)
def fbeta_ap_ax(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 1, thresh, beta)
def fbeta_ap_lld(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 2, thresh, beta)
def fbeta_ap_rld(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 3, thresh, beta)
def fbeta_pa(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 4, thresh, beta)
def fbeta_pa_lld(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 5, thresh, beta)
def fbeta_pa_rld(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 6, thresh, beta)
def fbeta_lat(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 7, thresh, beta)
def fbeta_ll(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 8, thresh, beta)
def fbeta_lao(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 9, thresh, beta)
def fbeta_rao(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 10, thresh, beta)
def fbeta_swim(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 11, thresh, beta)
def fbeta_xtab(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 12, thresh, beta)
def fbeta_lpo(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 13, thresh, beta)
def fbeta_txtcls(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 14, thresh, beta)
def fbeta_tab(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", 15, thresh, beta)
def fbeta_multi(pred, targ, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", None, thresh, beta)
def fbeta_weighted(pred, targ, weights, thresh=thresh, beta=beta): return single(pred, targ, "fbeta", None, thresh, beta, weights)